name: Rust Format, Clippy and Tests

on:
  push:
    branches:
      - development
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  format-clippy-test:
    name: Format, Clippy and Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Start PostgreSQL
        run: |
          sudo systemctl start postgresql.service
          pg_isready
      - name: Display PostgreSQL version
        run: sudo -u postgres psql -c "SELECT version();"
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install TimescaleDB
        run: |
          chmod +x ./scripts/timescaledb.deb.sh
          sudo ./scripts/timescaledb.deb.sh
          sudo apt install --yes postgresql-common
          echo -ne '\n' | sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
          sudo apt update
          sudo apt install --yes timescaledb-2-postgresql-14
          sudo timescaledb-tune --quiet --yes
          sudo systemctl restart postgresql.service
          pg_isready
      - name: Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: clippy, rustfmt
          override: true
      - run: rustup update
      - run: rustup update nightly
      - run: rustup default stable
      - run: rustup target add wasm32-unknown-unknown --toolchain nightly
      - run: cargo install sqlx-cli
      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: +nightly fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: +nightly clippy
          args: --all-targets -- -D warnings -W clippy::cognitive_complexity
      - name: Prepare test databases
        run: |
          chmod +x ./scripts/test.sh
          sudo -u postgres ./scripts/test.sh